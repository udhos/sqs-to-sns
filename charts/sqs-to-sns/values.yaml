# Default values for sqs-to-sns.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: udhos/sqs-to-sns
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# add custom labels to deployment pods
customLabels:
  app: sqs-to-sns

# redeploy:
#
# 'always': adds a random annotation to Deployment in
#           order to redeploy the pods whenever the chart is reapplied.
#
# 'reconfig': adds annotations with checksums of configurations in
#             order to redeploy the pods whenever configuration is changed.
#
# https://v3.helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
#
redeploy: always

podAnnotations:
  prometheus.io/path: /metrics
  prometheus.io/port: "3000"
  prometheus.io/scrape: "true"
  sidecar.istio.io/inject: "false"

podHealthCheck:
  port: 8888
  path: /health

#
# See: https://stackoverflow.com/questions/72816925/helm-templating-in-configmap-for-values-yaml
#
configMapProperties:
  AUTOMEMLIMIT_DEBUG: "true"
  QUEUES: /etc/sqs-to-sns/queues.yaml
  #
  # tracing
  #
  JAEGER_ENABLE: "false"
  IGNORE_SQS_ATTRIBUTE_LIMIT: "false"
  OTEL_TRACES_SAMPLER: parentbased_traceidratio
  OTEL_TRACES_SAMPLER_ARG: "0.01"
  #
  # General configuration: https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/
  # Exporter configuration: https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/
  #
  # Jaeger:
  OTELCONFIG_EXPORTER: jaeger
  OTEL_TRACES_EXPORTER: jaeger
  OTEL_PROPAGATORS: b3multi
  OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:14268
  #
  # OTLP gRPC:
  #OTELCONFIG_EXPORTER: grpc
  #OTEL_TRACES_EXPORTER: otlp
  #OTEL_PROPAGATORS: b3multi
  #OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:4317
  #
  # OTLP HTTP:
  #OTELCONFIG_EXPORTER: http
  #OTEL_TRACES_EXPORTER: otlp
  #OTEL_PROPAGATORS: b3multi
  #OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:4318
  #
  # health checks (use for livenessProbe only, not for readinessProbe)
  #
  HEALTH_ADDR: :8888
  HEALTH_PATH: /health
  #
  # prometheus metrics
  #
  PROMETHEUS_ENABLE: "true"
  DOGSTATSD_ENABLE: "true"
  DOGSTATSD_DEBUG: "false"
  METRICS_ADDR: :3000
  METRICS_PATH: /metrics
  METRICS_NAMESPACE: sqstosns
  METRICS_BUCKETS_LATENCY: "0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5.0"
  #
  # all env vars below define optional global defaults for per-queue config
  #
  #QUEUE_ROLE_ARN: arn:aws:iam::111111111111:role/sqs_consumer
  #TOPIC_ROLE_ARN: arn:aws:iam::222222222222:role/sns_producer
  READERS: "3"                 # number of goroutines reading from SQS queue
  WRITERS: "45"                # number of goroutines writing to SNS topic (recommended: 15 * READERS)
  BUFFER: "90"                 # buffer size between readers and writers (recommended: 30 * READERS)
  READ_ERROR_COOLDOWN: 10s     # cooldown holdtime after read errors
  WRITE_ERROR_COOLDOWN: 10s    # cooldown holdtime after write errors
  DELETE_ERROR_COOLDOWN: 10s   # cooldown holdtime after delete errors
  EMPTY_RECEIVE_COOLDOWN: 10s  # cooldown holdtime after empty receive
  COPY_ATTRIBUTES: "true"      # enable copying of message attributes from SQS message to SNS message
  DEBUG: "true"                # enable debug logs
  MAX_NUMBER_OF_MESSAGES: "10" # 1..10 (default 10)
  WAIT_TIME_SECONDS: "20"      # 0..20 (default 20)

configDir:
  queues.yaml: |
    - id: q1
      #
      # required
      #
      queue_url: https://sqs.us-east-1.amazonaws.com/111111111111/queue_name1
      topic_arn: arn:aws:sns:us-east-1:222222222222:topic_name1
      #
      # optional
      #
      #queue_role_arn: arn:aws:iam::111111111111:role/sqs_consumer1
      #topic_role_arn: arn:aws:iam::222222222222:role/sns_producer1
      #readers: 1
      #writers: 15 # recommended: 15*readers
      #buffer: 30  # recommended: 30*readers
      #error_cooldown_read: 10s
      #error_cooldown_write: 10s
      #error_cooldown_delete: 10s
      #empty_receive_cooldown: 10s
      #copy_attributes: true
      #debug: true
      #max_number_of_messages: "10" # 1..10 (default 10)
      #wait_time_seconds: "20"      # 0..20 (default 20)
    - id: q2
      #
      # required
      #
      queue_url: https://sqs.us-east-1.amazonaws.com/111111111111/queue_name2
      topic_arn: arn:aws:sns:us-east-1:222222222222:topic_name2
      #
      # optional
      #
      #queue_role_arn: arn:aws:iam::111111111111:role/sqs_consumer2
      #topic_role_arn: arn:aws:iam::222222222222:role/sns_producer2
      #readers: 1
      #writers: 15 # recommended: 15*readers
      #buffer: 30  # recommended: 30*readers
      #error_cooldown_read: 10s
      #error_cooldown_write: 10s
      #error_cooldown_delete: 10s
      #empty_receive_cooldown: 10s
      #copy_attributes: true
      #debug: true
      #max_number_of_messages: "10" # 1..10 (default 10)
      #wait_time_seconds: "20"      # 0..20 (default 20)

resources:
  requests:
    cpu: 300m
    memory: 100Mi
    ephemeral-storage: 1Gi
  limits:
    cpu: 2000m
    memory: 200Mi
    ephemeral-storage: 1Gi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  apiVersion: autoscaling/v2

nodeSelector: {}

tolerations: []

affinity: {}
